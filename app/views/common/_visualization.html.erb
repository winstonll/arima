<div class="visualization" id="v-answer">
  <div class="tabs">
    <ul class="tab-links">
        <li class="active"><a href="#world">World</a></li>
        <li><a href="#country">Country</a></li>
        <li><a href="#city">City</a></li>
    </ul>

    <div class="tab-content">
        <div id="world" class="tab active">
          <div id="answer-world" class='answer-chart'></div>
        </div>

        <div id="country" class="tab">
          <div id="answer-country" class='answer-chart'></div>
        </div>
        <% has_city = user_signed_in? ? answer.user.location.city.present? : false %>
        <% if has_city %>
          <div id="city" class="tab">
            <div id="answer-city" class='answer-chart'></div>
          </div>
        <% end %>
    </div>
  </div>
</div>

<script>
  jQuery(document).ready(function() {
      jQuery('.tabs .tab-links a').on('click', function(e)  {
          var currentAttrValue = jQuery(this).attr('href');

          // Show/Hide Tabs
          jQuery('.tabs ' + currentAttrValue).siblings().slideUp(400);
          jQuery('.tabs ' + currentAttrValue).delay(400).slideDown(400);

          // Change/remove current tab to active
          jQuery(this).parent('li').addClass('active').siblings().removeClass('active');

          e.preventDefault();
          show_location_answer(currentAttrValue.substring(1, currentAttrValue.length));
      });
  });

  var data_answer = {};

  <% if has_city %>
    data_answer.city = <%= answer.data_array('city').html_safe %>;
  <% end %>
  data_answer.country = <%= answer.data_array('country').html_safe %>;
  data_answer.world = <%= answer.data_array('world').html_safe %>;
  data_answer.selected = 'world';
  console.log(data_answer.selected);
  <% if answer.question.value_type == "collection" %>
    data_answer.collection = true;
  <% else %>
    data_answer.collection = false;
  <% end %>

  var chart_answer = c3.generate({
    <% unless defined?(from_show_view) %>
      size: { width: 450 },
    <% end %>
    data: {
      x: data_answer.collection ? null : 'x',
      columns: transform_data_answer(data_answer.selected),
      type: data_answer.collection ? 'donut' : 'bar'
    },
    size: {
        height: 450,
        width: 450
    },
    axis: {
      x: {
        label: {
          text: 'Answer Distribution',
          position: 'outer-center'
        }
      },
      y: {
        label: {
          text: 'Number of Votes',
          position: 'outer-middle'
        }
      }
    },
    tooltip: {
      format: {
        title: function (d) { return null; },
        value: function (value, ratio, id) {
          var sum = data_answer[data_answer.selected].reduce(function(p, c) {
            return p + c[1];
          }, 0);
          return (value / sum * 100).toFixed(1) + '%';
        }
      },
      contents: function (d, defaultTitleFormat, defaultValueFormat, color) {
        d.forEach(function(el){ el.name = el.value })
        return this.getTooltipContent ?
          this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color) : '';
      }
    }
  });

  $("#answer-" + data_answer.selected).append(chart_answer.element);

  function transform_data_answer(loc) {
    var data = data_answer[loc];
    if (data_answer.collection) {return data;}
    else{
      data = [['x'], [loc]];
      data_answer[loc].forEach(function(el, i, arr) {
        data[0].push(el[0]);
        data[1].push(el[1]);
      });
      return data;
    }
  }

  function show_location_answer(loc) {
    previous_selected = data_answer.selected;
    data_answer.selected = loc;
    var loc_arr = [];
    if(data_answer.collection){
      for (i = 0; i < transform_data_answer('world').length; i++){
        loc_arr.push(transform_data_answer('world')[i][0])
      }
    } else {
      loc_arr = [previous_selected];
    }
    console.log('#answer-' + loc);
    $("#answer-" + data_answer.selected).append(chart_answer.element);
    chart_answer.load({
      columns: transform_data_answer(loc),
      unload: loc_arr
    });
  }
</script>